{
	"id": "6b0ccfd7b2bc58a8b6f4405bc9ff2ab9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"7integers.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.5.0 <0.9.0;\r\n\r\n\r\n\r\n//INTEGERS\r\n//Two types of integer are present in solidity    int  and   uint(unsigned integer)\r\n//integer can store both negative and posiitive value\r\n//onlyy positive value in uint integer\r\n//int size---->8bit to 256bit\r\n//uint size---->8bit to 256bit\r\n//int alias to int256    .it means if we write int ,it means we are using int256\r\n//uint alias to uint256    .it means if we write uint ,it means we are using uint 256\r\n//if we want to specify like int8 ,  uint8  ,   int16  ,  unit16\r\n//by default int and uint is initializes to 0\r\n\r\n//There is no concept of Null in solidity\r\n\r\n\r\n\r\n\r\n\r\n//RANGE\r\n//   int8= -128 to +127        uint8= 0 to 255\r\n//   int8= 32768 to 32767      uint8= 0 to 65535\r\n//so on.......\r\n\r\n\r\n\r\ncontract local{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"7integers.sol": {
				"local": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"7integers.sol\":797:821  contract local{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"7integers.sol\":797:821  contract local{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122024509e8eccd5a1cfe426d027f46d10af3a2270808956da620e9a4e54cfb4371464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122024509e8eccd5a1cfe426d027f46d10af3a2270808956da620e9a4e54cfb4371464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 POP SWAP15 DUP15 0xCC 0xD5 LOG1 0xCF 0xE4 0x26 0xD0 0x27 DELEGATECALL PUSH14 0x10AF3A2270808956DA620E9A4E54 0xCF 0xB4 CALLDATACOPY EQ PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "797:24:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122024509e8eccd5a1cfe426d027f46d10af3a2270808956da620e9a4e54cfb4371464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 POP SWAP15 DUP15 0xCC 0xD5 LOG1 0xCF 0xE4 0x26 0xD0 0x27 DELEGATECALL PUSH14 0x10AF3A2270808956DA620E9A4E54 0xCF 0xB4 CALLDATACOPY EQ PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "797:24:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 797,
									"end": 821,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 797,
									"end": 821,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 797,
									"end": 821,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 797,
									"end": 821,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 797,
									"end": 821,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 797,
									"end": 821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 797,
									"end": 821,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 821,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 797,
									"end": 821,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 821,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122024509e8eccd5a1cfe426d027f46d10af3a2270808956da620e9a4e54cfb4371464736f6c63430008070033",
									".code": [
										{
											"begin": 797,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 797,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 797,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 797,
											"end": 821,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"7integers.sol\":\"local\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"7integers.sol\":{\"keccak256\":\"0xcaeb27345d3b857b5512f873c1bc41759841f7304d323d2d60230df0c53743e0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://697da63e9477be2eb42c80142eb01f49e2996f9bbd0aaa4f29634e9e50192837\",\"dweb:/ipfs/QmTpKMtTRXTrZ3uT6ReSW3rhEdjtE5eJF3T2ktWZaPAMtY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"7integers.sol": {
				"ast": {
					"absolutePath": "7integers.sol",
					"exportedSymbols": {
						"local": [
							2
						]
					},
					"id": 3,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "local",
							"nameLocation": "806:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "797:24:0",
							"usedErrors": []
						}
					],
					"src": "37:784:0"
				},
				"id": 0
			}
		}
	}
}